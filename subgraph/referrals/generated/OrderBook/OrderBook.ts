// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CancelDecreaseOrder extends ethereum.Event {
  get params(): CancelDecreaseOrder__Params {
    return new CancelDecreaseOrder__Params(this);
  }
}

export class CancelDecreaseOrder__Params {
  _event: CancelDecreaseOrder;

  constructor(event: CancelDecreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get indexToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class CancelIncreaseOrder extends ethereum.Event {
  get params(): CancelIncreaseOrder__Params {
    return new CancelIncreaseOrder__Params(this);
  }
}

export class CancelIncreaseOrder__Params {
  _event: CancelIncreaseOrder;

  constructor(event: CancelIncreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get purchaseToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get purchaseTokenAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class CancelSwapOrder extends ethereum.Event {
  get params(): CancelSwapOrder__Params {
    return new CancelSwapOrder__Params(this);
  }
}

export class CancelSwapOrder__Params {
  _event: CancelSwapOrder;

  constructor(event: CancelSwapOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minOut(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get triggerRatio(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get shouldUnwrap(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class CreateDecreaseOrder extends ethereum.Event {
  get params(): CreateDecreaseOrder__Params {
    return new CreateDecreaseOrder__Params(this);
  }
}

export class CreateDecreaseOrder__Params {
  _event: CreateDecreaseOrder;

  constructor(event: CreateDecreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get indexToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class CreateIncreaseOrder extends ethereum.Event {
  get params(): CreateIncreaseOrder__Params {
    return new CreateIncreaseOrder__Params(this);
  }
}

export class CreateIncreaseOrder__Params {
  _event: CreateIncreaseOrder;

  constructor(event: CreateIncreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get purchaseToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get purchaseTokenAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class CreateSwapOrder extends ethereum.Event {
  get params(): CreateSwapOrder__Params {
    return new CreateSwapOrder__Params(this);
  }
}

export class CreateSwapOrder__Params {
  _event: CreateSwapOrder;

  constructor(event: CreateSwapOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minOut(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get triggerRatio(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get shouldUnwrap(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class ExecuteDecreaseOrder extends ethereum.Event {
  get params(): ExecuteDecreaseOrder__Params {
    return new ExecuteDecreaseOrder__Params(this);
  }
}

export class ExecuteDecreaseOrder__Params {
  _event: ExecuteDecreaseOrder;

  constructor(event: ExecuteDecreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get indexToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get executionPrice(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class ExecuteIncreaseOrder extends ethereum.Event {
  get params(): ExecuteIncreaseOrder__Params {
    return new ExecuteIncreaseOrder__Params(this);
  }
}

export class ExecuteIncreaseOrder__Params {
  _event: ExecuteIncreaseOrder;

  constructor(event: ExecuteIncreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get purchaseToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get purchaseTokenAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[9].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get executionPrice(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class ExecuteSwapOrder extends ethereum.Event {
  get params(): ExecuteSwapOrder__Params {
    return new ExecuteSwapOrder__Params(this);
  }
}

export class ExecuteSwapOrder__Params {
  _event: ExecuteSwapOrder;

  constructor(event: ExecuteSwapOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minOut(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get triggerRatio(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get shouldUnwrap(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class Initialize extends ethereum.Event {
  get params(): Initialize__Params {
    return new Initialize__Params(this);
  }
}

export class Initialize__Params {
  _event: Initialize;

  constructor(event: Initialize) {
    this._event = event;
  }

  get router(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get weth(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get usdg(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get minExecutionFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get minPurchaseTokenAmountUsd(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class UpdateDecreaseOrder extends ethereum.Event {
  get params(): UpdateDecreaseOrder__Params {
    return new UpdateDecreaseOrder__Params(this);
  }
}

export class UpdateDecreaseOrder__Params {
  _event: UpdateDecreaseOrder;

  constructor(event: UpdateDecreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateralDelta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get indexToken(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get isLong(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[8].value.toBoolean();
  }
}

export class UpdateGov extends ethereum.Event {
  get params(): UpdateGov__Params {
    return new UpdateGov__Params(this);
  }
}

export class UpdateGov__Params {
  _event: UpdateGov;

  constructor(event: UpdateGov) {
    this._event = event;
  }

  get gov(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdateIncreaseOrder extends ethereum.Event {
  get params(): UpdateIncreaseOrder__Params {
    return new UpdateIncreaseOrder__Params(this);
  }
}

export class UpdateIncreaseOrder__Params {
  _event: UpdateIncreaseOrder;

  constructor(event: UpdateIncreaseOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get indexToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get sizeDelta(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get triggerPrice(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }
}

export class UpdateMinExecutionFee extends ethereum.Event {
  get params(): UpdateMinExecutionFee__Params {
    return new UpdateMinExecutionFee__Params(this);
  }
}

export class UpdateMinExecutionFee__Params {
  _event: UpdateMinExecutionFee;

  constructor(event: UpdateMinExecutionFee) {
    this._event = event;
  }

  get minExecutionFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateMinPurchaseTokenAmountUsd extends ethereum.Event {
  get params(): UpdateMinPurchaseTokenAmountUsd__Params {
    return new UpdateMinPurchaseTokenAmountUsd__Params(this);
  }
}

export class UpdateMinPurchaseTokenAmountUsd__Params {
  _event: UpdateMinPurchaseTokenAmountUsd;

  constructor(event: UpdateMinPurchaseTokenAmountUsd) {
    this._event = event;
  }

  get minPurchaseTokenAmountUsd(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateSwapOrder extends ethereum.Event {
  get params(): UpdateSwapOrder__Params {
    return new UpdateSwapOrder__Params(this);
  }
}

export class UpdateSwapOrder__Params {
  _event: UpdateSwapOrder;

  constructor(event: UpdateSwapOrder) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ordexIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minOut(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get triggerRatio(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get triggerAboveThreshold(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get shouldUnwrap(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get executionFee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class OrderBook__decreaseOrdersResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: boolean;
  value8: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: boolean,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }
}

export class OrderBook__getDecreaseOrderResult {
  value0: Address;
  value1: BigInt;
  value2: Address;
  value3: BigInt;
  value4: boolean;
  value5: BigInt;
  value6: boolean;
  value7: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: Address,
    value3: BigInt,
    value4: boolean,
    value5: BigInt,
    value6: boolean,
    value7: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }
}

export class OrderBook__getIncreaseOrderResult {
  value0: Address;
  value1: BigInt;
  value2: Address;
  value3: Address;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: boolean;
  value8: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: Address,
    value3: Address,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: boolean,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }
}

export class OrderBook__getSwapOrderResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;
  value7: boolean;
  value8: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: boolean,
    value7: boolean,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }
}

export class OrderBook__increaseOrdersResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: Address;
  value4: Address;
  value5: BigInt;
  value6: boolean;
  value7: BigInt;
  value8: boolean;
  value9: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: Address,
    value4: Address,
    value5: BigInt,
    value6: boolean,
    value7: BigInt,
    value8: boolean,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }
}

export class OrderBook__swapOrdersResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: boolean;
  value6: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: boolean,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class OrderBook__validatePositionOrderPriceResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class OrderBook extends ethereum.SmartContract {
  static bind(address: Address): OrderBook {
    return new OrderBook("OrderBook", address);
  }

  PRICE_PRECISION(): BigInt {
    let result = super.call(
      "PRICE_PRECISION",
      "PRICE_PRECISION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PRICE_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PRICE_PRECISION",
      "PRICE_PRECISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  USDG_PRECISION(): BigInt {
    let result = super.call("USDG_PRECISION", "USDG_PRECISION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_USDG_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "USDG_PRECISION",
      "USDG_PRECISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decreaseOrders(
    param0: Address,
    param1: BigInt
  ): OrderBook__decreaseOrdersResult {
    let result = super.call(
      "decreaseOrders",
      "decreaseOrders(address,uint256):(address,address,uint256,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new OrderBook__decreaseOrdersResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBigInt()
    );
  }

  try_decreaseOrders(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<OrderBook__decreaseOrdersResult> {
    let result = super.tryCall(
      "decreaseOrders",
      "decreaseOrders(address,uint256):(address,address,uint256,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__decreaseOrdersResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBigInt()
      )
    );
  }

  decreaseOrdersIndex(param0: Address): BigInt {
    let result = super.call(
      "decreaseOrdersIndex",
      "decreaseOrdersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_decreaseOrdersIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decreaseOrdersIndex",
      "decreaseOrdersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDecreaseOrder(
    _account: Address,
    _orderIndex: BigInt
  ): OrderBook__getDecreaseOrderResult {
    let result = super.call(
      "getDecreaseOrder",
      "getDecreaseOrder(address,uint256):(address,uint256,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_orderIndex)
      ]
    );

    return new OrderBook__getDecreaseOrderResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toBigInt()
    );
  }

  try_getDecreaseOrder(
    _account: Address,
    _orderIndex: BigInt
  ): ethereum.CallResult<OrderBook__getDecreaseOrderResult> {
    let result = super.tryCall(
      "getDecreaseOrder",
      "getDecreaseOrder(address,uint256):(address,uint256,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_orderIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__getDecreaseOrderResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toBigInt()
      )
    );
  }

  getIncreaseOrder(
    _account: Address,
    _orderIndex: BigInt
  ): OrderBook__getIncreaseOrderResult {
    let result = super.call(
      "getIncreaseOrder",
      "getIncreaseOrder(address,uint256):(address,uint256,address,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_orderIndex)
      ]
    );

    return new OrderBook__getIncreaseOrderResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBigInt()
    );
  }

  try_getIncreaseOrder(
    _account: Address,
    _orderIndex: BigInt
  ): ethereum.CallResult<OrderBook__getIncreaseOrderResult> {
    let result = super.tryCall(
      "getIncreaseOrder",
      "getIncreaseOrder(address,uint256):(address,uint256,address,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_orderIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__getIncreaseOrderResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBigInt()
      )
    );
  }

  getSwapOrder(
    _account: Address,
    _orderIndex: BigInt
  ): OrderBook__getSwapOrderResult {
    let result = super.call(
      "getSwapOrder",
      "getSwapOrder(address,uint256):(address,address,address,uint256,uint256,uint256,bool,bool,uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_orderIndex)
      ]
    );

    return new OrderBook__getSwapOrderResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toBoolean(),
      result[8].toBigInt()
    );
  }

  try_getSwapOrder(
    _account: Address,
    _orderIndex: BigInt
  ): ethereum.CallResult<OrderBook__getSwapOrderResult> {
    let result = super.tryCall(
      "getSwapOrder",
      "getSwapOrder(address,uint256):(address,address,address,uint256,uint256,uint256,bool,bool,uint256)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_orderIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__getSwapOrderResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toBoolean(),
        value[8].toBigInt()
      )
    );
  }

  getUsdgMinPrice(_otherToken: Address): BigInt {
    let result = super.call(
      "getUsdgMinPrice",
      "getUsdgMinPrice(address):(uint256)",
      [ethereum.Value.fromAddress(_otherToken)]
    );

    return result[0].toBigInt();
  }

  try_getUsdgMinPrice(_otherToken: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUsdgMinPrice",
      "getUsdgMinPrice(address):(uint256)",
      [ethereum.Value.fromAddress(_otherToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gov(): Address {
    let result = super.call("gov", "gov():(address)", []);

    return result[0].toAddress();
  }

  try_gov(): ethereum.CallResult<Address> {
    let result = super.tryCall("gov", "gov():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  increaseOrders(
    param0: Address,
    param1: BigInt
  ): OrderBook__increaseOrdersResult {
    let result = super.call(
      "increaseOrders",
      "increaseOrders(address,uint256):(address,address,uint256,address,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new OrderBook__increaseOrdersResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toBigInt(),
      result[8].toBoolean(),
      result[9].toBigInt()
    );
  }

  try_increaseOrders(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<OrderBook__increaseOrdersResult> {
    let result = super.tryCall(
      "increaseOrders",
      "increaseOrders(address,uint256):(address,address,uint256,address,address,uint256,bool,uint256,bool,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__increaseOrdersResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBoolean(),
        value[7].toBigInt(),
        value[8].toBoolean(),
        value[9].toBigInt()
      )
    );
  }

  increaseOrdersIndex(param0: Address): BigInt {
    let result = super.call(
      "increaseOrdersIndex",
      "increaseOrdersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_increaseOrdersIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "increaseOrdersIndex",
      "increaseOrdersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minExecutionFee(): BigInt {
    let result = super.call(
      "minExecutionFee",
      "minExecutionFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minExecutionFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minExecutionFee",
      "minExecutionFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minPurchaseTokenAmountUsd(): BigInt {
    let result = super.call(
      "minPurchaseTokenAmountUsd",
      "minPurchaseTokenAmountUsd():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minPurchaseTokenAmountUsd(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minPurchaseTokenAmountUsd",
      "minPurchaseTokenAmountUsd():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  swapOrders(param0: Address, param1: BigInt): OrderBook__swapOrdersResult {
    let result = super.call(
      "swapOrders",
      "swapOrders(address,uint256):(address,uint256,uint256,uint256,bool,bool,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new OrderBook__swapOrdersResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBoolean(),
      result[6].toBigInt()
    );
  }

  try_swapOrders(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<OrderBook__swapOrdersResult> {
    let result = super.tryCall(
      "swapOrders",
      "swapOrders(address,uint256):(address,uint256,uint256,uint256,bool,bool,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__swapOrdersResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBoolean(),
        value[6].toBigInt()
      )
    );
  }

  swapOrdersIndex(param0: Address): BigInt {
    let result = super.call(
      "swapOrdersIndex",
      "swapOrdersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_swapOrdersIndex(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "swapOrdersIndex",
      "swapOrdersIndex(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  usdg(): Address {
    let result = super.call("usdg", "usdg():(address)", []);

    return result[0].toAddress();
  }

  try_usdg(): ethereum.CallResult<Address> {
    let result = super.tryCall("usdg", "usdg():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  validatePositionOrderPrice(
    _triggerAboveThreshold: boolean,
    _triggerPrice: BigInt,
    _indexToken: Address,
    _maximizePrice: boolean,
    _raise: boolean
  ): OrderBook__validatePositionOrderPriceResult {
    let result = super.call(
      "validatePositionOrderPrice",
      "validatePositionOrderPrice(bool,uint256,address,bool,bool):(uint256,bool)",
      [
        ethereum.Value.fromBoolean(_triggerAboveThreshold),
        ethereum.Value.fromUnsignedBigInt(_triggerPrice),
        ethereum.Value.fromAddress(_indexToken),
        ethereum.Value.fromBoolean(_maximizePrice),
        ethereum.Value.fromBoolean(_raise)
      ]
    );

    return new OrderBook__validatePositionOrderPriceResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_validatePositionOrderPrice(
    _triggerAboveThreshold: boolean,
    _triggerPrice: BigInt,
    _indexToken: Address,
    _maximizePrice: boolean,
    _raise: boolean
  ): ethereum.CallResult<OrderBook__validatePositionOrderPriceResult> {
    let result = super.tryCall(
      "validatePositionOrderPrice",
      "validatePositionOrderPrice(bool,uint256,address,bool,bool):(uint256,bool)",
      [
        ethereum.Value.fromBoolean(_triggerAboveThreshold),
        ethereum.Value.fromUnsignedBigInt(_triggerPrice),
        ethereum.Value.fromAddress(_indexToken),
        ethereum.Value.fromBoolean(_maximizePrice),
        ethereum.Value.fromBoolean(_raise)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderBook__validatePositionOrderPriceResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  validateSwapOrderPriceWithTriggerAboveThreshold(
    _path: Array<Address>,
    _triggerRatio: BigInt
  ): boolean {
    let result = super.call(
      "validateSwapOrderPriceWithTriggerAboveThreshold",
      "validateSwapOrderPriceWithTriggerAboveThreshold(address[],uint256):(bool)",
      [
        ethereum.Value.fromAddressArray(_path),
        ethereum.Value.fromUnsignedBigInt(_triggerRatio)
      ]
    );

    return result[0].toBoolean();
  }

  try_validateSwapOrderPriceWithTriggerAboveThreshold(
    _path: Array<Address>,
    _triggerRatio: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "validateSwapOrderPriceWithTriggerAboveThreshold",
      "validateSwapOrderPriceWithTriggerAboveThreshold(address[],uint256):(bool)",
      [
        ethereum.Value.fromAddressArray(_path),
        ethereum.Value.fromUnsignedBigInt(_triggerRatio)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  vault(): Address {
    let result = super.call("vault", "vault():(address)", []);

    return result[0].toAddress();
  }

  try_vault(): ethereum.CallResult<Address> {
    let result = super.tryCall("vault", "vault():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelDecreaseOrderCall extends ethereum.Call {
  get inputs(): CancelDecreaseOrderCall__Inputs {
    return new CancelDecreaseOrderCall__Inputs(this);
  }

  get outputs(): CancelDecreaseOrderCall__Outputs {
    return new CancelDecreaseOrderCall__Outputs(this);
  }
}

export class CancelDecreaseOrderCall__Inputs {
  _call: CancelDecreaseOrderCall;

  constructor(call: CancelDecreaseOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelDecreaseOrderCall__Outputs {
  _call: CancelDecreaseOrderCall;

  constructor(call: CancelDecreaseOrderCall) {
    this._call = call;
  }
}

export class CancelIncreaseOrderCall extends ethereum.Call {
  get inputs(): CancelIncreaseOrderCall__Inputs {
    return new CancelIncreaseOrderCall__Inputs(this);
  }

  get outputs(): CancelIncreaseOrderCall__Outputs {
    return new CancelIncreaseOrderCall__Outputs(this);
  }
}

export class CancelIncreaseOrderCall__Inputs {
  _call: CancelIncreaseOrderCall;

  constructor(call: CancelIncreaseOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelIncreaseOrderCall__Outputs {
  _call: CancelIncreaseOrderCall;

  constructor(call: CancelIncreaseOrderCall) {
    this._call = call;
  }
}

export class CancelMultipleCall extends ethereum.Call {
  get inputs(): CancelMultipleCall__Inputs {
    return new CancelMultipleCall__Inputs(this);
  }

  get outputs(): CancelMultipleCall__Outputs {
    return new CancelMultipleCall__Outputs(this);
  }
}

export class CancelMultipleCall__Inputs {
  _call: CancelMultipleCall;

  constructor(call: CancelMultipleCall) {
    this._call = call;
  }

  get _swapOrderIndexes(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _increaseOrderIndexes(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _decreaseOrderIndexes(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class CancelMultipleCall__Outputs {
  _call: CancelMultipleCall;

  constructor(call: CancelMultipleCall) {
    this._call = call;
  }
}

export class CancelSwapOrderCall extends ethereum.Call {
  get inputs(): CancelSwapOrderCall__Inputs {
    return new CancelSwapOrderCall__Inputs(this);
  }

  get outputs(): CancelSwapOrderCall__Outputs {
    return new CancelSwapOrderCall__Outputs(this);
  }
}

export class CancelSwapOrderCall__Inputs {
  _call: CancelSwapOrderCall;

  constructor(call: CancelSwapOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelSwapOrderCall__Outputs {
  _call: CancelSwapOrderCall;

  constructor(call: CancelSwapOrderCall) {
    this._call = call;
  }
}

export class CreateDecreaseOrderCall extends ethereum.Call {
  get inputs(): CreateDecreaseOrderCall__Inputs {
    return new CreateDecreaseOrderCall__Inputs(this);
  }

  get outputs(): CreateDecreaseOrderCall__Outputs {
    return new CreateDecreaseOrderCall__Outputs(this);
  }
}

export class CreateDecreaseOrderCall__Inputs {
  _call: CreateDecreaseOrderCall;

  constructor(call: CreateDecreaseOrderCall) {
    this._call = call;
  }

  get _indexToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _collateralToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _collateralDelta(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _isLong(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _triggerPrice(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _triggerAboveThreshold(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }
}

export class CreateDecreaseOrderCall__Outputs {
  _call: CreateDecreaseOrderCall;

  constructor(call: CreateDecreaseOrderCall) {
    this._call = call;
  }
}

export class CreateIncreaseOrderCall extends ethereum.Call {
  get inputs(): CreateIncreaseOrderCall__Inputs {
    return new CreateIncreaseOrderCall__Inputs(this);
  }

  get outputs(): CreateIncreaseOrderCall__Outputs {
    return new CreateIncreaseOrderCall__Outputs(this);
  }
}

export class CreateIncreaseOrderCall__Inputs {
  _call: CreateIncreaseOrderCall;

  constructor(call: CreateIncreaseOrderCall) {
    this._call = call;
  }

  get _path(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _indexToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _minOut(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _collateralToken(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _isLong(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }

  get _triggerPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _triggerAboveThreshold(): boolean {
    return this._call.inputValues[8].value.toBoolean();
  }

  get _executionFee(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _shouldWrap(): boolean {
    return this._call.inputValues[10].value.toBoolean();
  }
}

export class CreateIncreaseOrderCall__Outputs {
  _call: CreateIncreaseOrderCall;

  constructor(call: CreateIncreaseOrderCall) {
    this._call = call;
  }
}

export class CreateSwapOrderCall extends ethereum.Call {
  get inputs(): CreateSwapOrderCall__Inputs {
    return new CreateSwapOrderCall__Inputs(this);
  }

  get outputs(): CreateSwapOrderCall__Outputs {
    return new CreateSwapOrderCall__Outputs(this);
  }
}

export class CreateSwapOrderCall__Inputs {
  _call: CreateSwapOrderCall;

  constructor(call: CreateSwapOrderCall) {
    this._call = call;
  }

  get _path(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minOut(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _triggerRatio(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _triggerAboveThreshold(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get _executionFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _shouldWrap(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }

  get _shouldUnwrap(): boolean {
    return this._call.inputValues[7].value.toBoolean();
  }
}

export class CreateSwapOrderCall__Outputs {
  _call: CreateSwapOrderCall;

  constructor(call: CreateSwapOrderCall) {
    this._call = call;
  }
}

export class ExecuteDecreaseOrderCall extends ethereum.Call {
  get inputs(): ExecuteDecreaseOrderCall__Inputs {
    return new ExecuteDecreaseOrderCall__Inputs(this);
  }

  get outputs(): ExecuteDecreaseOrderCall__Outputs {
    return new ExecuteDecreaseOrderCall__Outputs(this);
  }
}

export class ExecuteDecreaseOrderCall__Inputs {
  _call: ExecuteDecreaseOrderCall;

  constructor(call: ExecuteDecreaseOrderCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ExecuteDecreaseOrderCall__Outputs {
  _call: ExecuteDecreaseOrderCall;

  constructor(call: ExecuteDecreaseOrderCall) {
    this._call = call;
  }
}

export class ExecuteIncreaseOrderCall extends ethereum.Call {
  get inputs(): ExecuteIncreaseOrderCall__Inputs {
    return new ExecuteIncreaseOrderCall__Inputs(this);
  }

  get outputs(): ExecuteIncreaseOrderCall__Outputs {
    return new ExecuteIncreaseOrderCall__Outputs(this);
  }
}

export class ExecuteIncreaseOrderCall__Inputs {
  _call: ExecuteIncreaseOrderCall;

  constructor(call: ExecuteIncreaseOrderCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ExecuteIncreaseOrderCall__Outputs {
  _call: ExecuteIncreaseOrderCall;

  constructor(call: ExecuteIncreaseOrderCall) {
    this._call = call;
  }
}

export class ExecuteSwapOrderCall extends ethereum.Call {
  get inputs(): ExecuteSwapOrderCall__Inputs {
    return new ExecuteSwapOrderCall__Inputs(this);
  }

  get outputs(): ExecuteSwapOrderCall__Outputs {
    return new ExecuteSwapOrderCall__Outputs(this);
  }
}

export class ExecuteSwapOrderCall__Inputs {
  _call: ExecuteSwapOrderCall;

  constructor(call: ExecuteSwapOrderCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeReceiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ExecuteSwapOrderCall__Outputs {
  _call: ExecuteSwapOrderCall;

  constructor(call: ExecuteSwapOrderCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vault(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _usdg(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _minExecutionFee(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _minPurchaseTokenAmountUsd(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetGovCall extends ethereum.Call {
  get inputs(): SetGovCall__Inputs {
    return new SetGovCall__Inputs(this);
  }

  get outputs(): SetGovCall__Outputs {
    return new SetGovCall__Outputs(this);
  }
}

export class SetGovCall__Inputs {
  _call: SetGovCall;

  constructor(call: SetGovCall) {
    this._call = call;
  }

  get _gov(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovCall__Outputs {
  _call: SetGovCall;

  constructor(call: SetGovCall) {
    this._call = call;
  }
}

export class SetMinExecutionFeeCall extends ethereum.Call {
  get inputs(): SetMinExecutionFeeCall__Inputs {
    return new SetMinExecutionFeeCall__Inputs(this);
  }

  get outputs(): SetMinExecutionFeeCall__Outputs {
    return new SetMinExecutionFeeCall__Outputs(this);
  }
}

export class SetMinExecutionFeeCall__Inputs {
  _call: SetMinExecutionFeeCall;

  constructor(call: SetMinExecutionFeeCall) {
    this._call = call;
  }

  get _minExecutionFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinExecutionFeeCall__Outputs {
  _call: SetMinExecutionFeeCall;

  constructor(call: SetMinExecutionFeeCall) {
    this._call = call;
  }
}

export class SetMinPurchaseTokenAmountUsdCall extends ethereum.Call {
  get inputs(): SetMinPurchaseTokenAmountUsdCall__Inputs {
    return new SetMinPurchaseTokenAmountUsdCall__Inputs(this);
  }

  get outputs(): SetMinPurchaseTokenAmountUsdCall__Outputs {
    return new SetMinPurchaseTokenAmountUsdCall__Outputs(this);
  }
}

export class SetMinPurchaseTokenAmountUsdCall__Inputs {
  _call: SetMinPurchaseTokenAmountUsdCall;

  constructor(call: SetMinPurchaseTokenAmountUsdCall) {
    this._call = call;
  }

  get _minPurchaseTokenAmountUsd(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinPurchaseTokenAmountUsdCall__Outputs {
  _call: SetMinPurchaseTokenAmountUsdCall;

  constructor(call: SetMinPurchaseTokenAmountUsdCall) {
    this._call = call;
  }
}

export class UpdateDecreaseOrderCall extends ethereum.Call {
  get inputs(): UpdateDecreaseOrderCall__Inputs {
    return new UpdateDecreaseOrderCall__Inputs(this);
  }

  get outputs(): UpdateDecreaseOrderCall__Outputs {
    return new UpdateDecreaseOrderCall__Outputs(this);
  }
}

export class UpdateDecreaseOrderCall__Inputs {
  _call: UpdateDecreaseOrderCall;

  constructor(call: UpdateDecreaseOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _collateralDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _triggerPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _triggerAboveThreshold(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class UpdateDecreaseOrderCall__Outputs {
  _call: UpdateDecreaseOrderCall;

  constructor(call: UpdateDecreaseOrderCall) {
    this._call = call;
  }
}

export class UpdateIncreaseOrderCall extends ethereum.Call {
  get inputs(): UpdateIncreaseOrderCall__Inputs {
    return new UpdateIncreaseOrderCall__Inputs(this);
  }

  get outputs(): UpdateIncreaseOrderCall__Outputs {
    return new UpdateIncreaseOrderCall__Outputs(this);
  }
}

export class UpdateIncreaseOrderCall__Inputs {
  _call: UpdateIncreaseOrderCall;

  constructor(call: UpdateIncreaseOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sizeDelta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _triggerPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _triggerAboveThreshold(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class UpdateIncreaseOrderCall__Outputs {
  _call: UpdateIncreaseOrderCall;

  constructor(call: UpdateIncreaseOrderCall) {
    this._call = call;
  }
}

export class UpdateSwapOrderCall extends ethereum.Call {
  get inputs(): UpdateSwapOrderCall__Inputs {
    return new UpdateSwapOrderCall__Inputs(this);
  }

  get outputs(): UpdateSwapOrderCall__Outputs {
    return new UpdateSwapOrderCall__Outputs(this);
  }
}

export class UpdateSwapOrderCall__Inputs {
  _call: UpdateSwapOrderCall;

  constructor(call: UpdateSwapOrderCall) {
    this._call = call;
  }

  get _orderIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minOut(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _triggerRatio(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _triggerAboveThreshold(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class UpdateSwapOrderCall__Outputs {
  _call: UpdateSwapOrderCall;

  constructor(call: UpdateSwapOrderCall) {
    this._call = call;
  }
}
