// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SetPrice extends ethereum.Event {
  get params(): SetPrice__Params {
    return new SetPrice__Params(this);
  }
}

export class SetPrice__Params {
  _event: SetPrice;

  constructor(event: SetPrice) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FastPriceFeed extends ethereum.SmartContract {
  static bind(address: Address): FastPriceFeed {
    return new FastPriceFeed("FastPriceFeed", address);
  }

  BASIS_POINTS_DIVISOR(): BigInt {
    let result = super.call(
      "BASIS_POINTS_DIVISOR",
      "BASIS_POINTS_DIVISOR():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_BASIS_POINTS_DIVISOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BASIS_POINTS_DIVISOR",
      "BASIS_POINTS_DIVISOR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  COMPACTED_PRECISION(): BigInt {
    let result = super.call(
      "COMPACTED_PRECISION",
      "COMPACTED_PRECISION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_COMPACTED_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "COMPACTED_PRECISION",
      "COMPACTED_PRECISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_PRICE_DURATION(): BigInt {
    let result = super.call(
      "MAX_PRICE_DURATION",
      "MAX_PRICE_DURATION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_PRICE_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PRICE_DURATION",
      "MAX_PRICE_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRICE_BITMASK(): BigInt {
    let result = super.call("PRICE_BITMASK", "PRICE_BITMASK():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRICE_BITMASK(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PRICE_BITMASK",
      "PRICE_BITMASK():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRICE_PRECISION(): BigInt {
    let result = super.call(
      "PRICE_PRECISION",
      "PRICE_PRECISION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PRICE_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PRICE_PRECISION",
      "PRICE_PRECISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  disableFastPriceVoteCount(): BigInt {
    let result = super.call(
      "disableFastPriceVoteCount",
      "disableFastPriceVoteCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_disableFastPriceVoteCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "disableFastPriceVoteCount",
      "disableFastPriceVoteCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  disableFastPriceVotes(param0: Address): boolean {
    let result = super.call(
      "disableFastPriceVotes",
      "disableFastPriceVotes(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_disableFastPriceVotes(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "disableFastPriceVotes",
      "disableFastPriceVotes(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  favorFastPrice(): boolean {
    let result = super.call("favorFastPrice", "favorFastPrice():(bool)", []);

    return result[0].toBoolean();
  }

  try_favorFastPrice(): ethereum.CallResult<boolean> {
    let result = super.tryCall("favorFastPrice", "favorFastPrice():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPrice(_token: Address, _refPrice: BigInt, _maximise: boolean): BigInt {
    let result = super.call(
      "getPrice",
      "getPrice(address,uint256,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_refPrice),
        ethereum.Value.fromBoolean(_maximise)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPrice(
    _token: Address,
    _refPrice: BigInt,
    _maximise: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPrice",
      "getPrice(address,uint256,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_refPrice),
        ethereum.Value.fromBoolean(_maximise)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gov(): Address {
    let result = super.call("gov", "gov():(address)", []);

    return result[0].toAddress();
  }

  try_gov(): ethereum.CallResult<Address> {
    let result = super.tryCall("gov", "gov():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSigner(param0: Address): boolean {
    let result = super.call("isSigner", "isSigner(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isSigner(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSigner", "isSigner(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSpreadEnabled(): boolean {
    let result = super.call("isSpreadEnabled", "isSpreadEnabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_isSpreadEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSpreadEnabled",
      "isSpreadEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastUpdatedAt(): BigInt {
    let result = super.call("lastUpdatedAt", "lastUpdatedAt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastUpdatedAt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastUpdatedAt",
      "lastUpdatedAt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxDeviationBasisPoints(): BigInt {
    let result = super.call(
      "maxDeviationBasisPoints",
      "maxDeviationBasisPoints():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxDeviationBasisPoints(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxDeviationBasisPoints",
      "maxDeviationBasisPoints():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minAuthorizations(): BigInt {
    let result = super.call(
      "minAuthorizations",
      "minAuthorizations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minAuthorizations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minAuthorizations",
      "minAuthorizations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  priceDuration(): BigInt {
    let result = super.call("priceDuration", "priceDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_priceDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "priceDuration",
      "priceDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  prices(param0: Address): BigInt {
    let result = super.call("prices", "prices(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_prices(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("prices", "prices(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokens(param0: BigInt): Address {
    let result = super.call("tokens", "tokens(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_tokens(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("tokens", "tokens(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  volBasisPoints(): BigInt {
    let result = super.call("volBasisPoints", "volBasisPoints():(uint256)", []);

    return result[0].toBigInt();
  }

  try_volBasisPoints(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "volBasisPoints",
      "volBasisPoints():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _priceDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxDeviationBasisPoints(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DisableFastPriceCall extends ethereum.Call {
  get inputs(): DisableFastPriceCall__Inputs {
    return new DisableFastPriceCall__Inputs(this);
  }

  get outputs(): DisableFastPriceCall__Outputs {
    return new DisableFastPriceCall__Outputs(this);
  }
}

export class DisableFastPriceCall__Inputs {
  _call: DisableFastPriceCall;

  constructor(call: DisableFastPriceCall) {
    this._call = call;
  }
}

export class DisableFastPriceCall__Outputs {
  _call: DisableFastPriceCall;

  constructor(call: DisableFastPriceCall) {
    this._call = call;
  }
}

export class EnableFastPriceCall extends ethereum.Call {
  get inputs(): EnableFastPriceCall__Inputs {
    return new EnableFastPriceCall__Inputs(this);
  }

  get outputs(): EnableFastPriceCall__Outputs {
    return new EnableFastPriceCall__Outputs(this);
  }
}

export class EnableFastPriceCall__Inputs {
  _call: EnableFastPriceCall;

  constructor(call: EnableFastPriceCall) {
    this._call = call;
  }
}

export class EnableFastPriceCall__Outputs {
  _call: EnableFastPriceCall;

  constructor(call: EnableFastPriceCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _minAuthorizations(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _signers(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetCompactedPricesCall extends ethereum.Call {
  get inputs(): SetCompactedPricesCall__Inputs {
    return new SetCompactedPricesCall__Inputs(this);
  }

  get outputs(): SetCompactedPricesCall__Outputs {
    return new SetCompactedPricesCall__Outputs(this);
  }
}

export class SetCompactedPricesCall__Inputs {
  _call: SetCompactedPricesCall;

  constructor(call: SetCompactedPricesCall) {
    this._call = call;
  }

  get _priceBitArray(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetCompactedPricesCall__Outputs {
  _call: SetCompactedPricesCall;

  constructor(call: SetCompactedPricesCall) {
    this._call = call;
  }
}

export class SetGovCall extends ethereum.Call {
  get inputs(): SetGovCall__Inputs {
    return new SetGovCall__Inputs(this);
  }

  get outputs(): SetGovCall__Outputs {
    return new SetGovCall__Outputs(this);
  }
}

export class SetGovCall__Inputs {
  _call: SetGovCall;

  constructor(call: SetGovCall) {
    this._call = call;
  }

  get _gov(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovCall__Outputs {
  _call: SetGovCall;

  constructor(call: SetGovCall) {
    this._call = call;
  }
}

export class SetIsSpreadEnabledCall extends ethereum.Call {
  get inputs(): SetIsSpreadEnabledCall__Inputs {
    return new SetIsSpreadEnabledCall__Inputs(this);
  }

  get outputs(): SetIsSpreadEnabledCall__Outputs {
    return new SetIsSpreadEnabledCall__Outputs(this);
  }
}

export class SetIsSpreadEnabledCall__Inputs {
  _call: SetIsSpreadEnabledCall;

  constructor(call: SetIsSpreadEnabledCall) {
    this._call = call;
  }

  get _isSpreadEnabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetIsSpreadEnabledCall__Outputs {
  _call: SetIsSpreadEnabledCall;

  constructor(call: SetIsSpreadEnabledCall) {
    this._call = call;
  }
}

export class SetPriceDurationCall extends ethereum.Call {
  get inputs(): SetPriceDurationCall__Inputs {
    return new SetPriceDurationCall__Inputs(this);
  }

  get outputs(): SetPriceDurationCall__Outputs {
    return new SetPriceDurationCall__Outputs(this);
  }
}

export class SetPriceDurationCall__Inputs {
  _call: SetPriceDurationCall;

  constructor(call: SetPriceDurationCall) {
    this._call = call;
  }

  get _priceDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPriceDurationCall__Outputs {
  _call: SetPriceDurationCall;

  constructor(call: SetPriceDurationCall) {
    this._call = call;
  }
}

export class SetPricesCall extends ethereum.Call {
  get inputs(): SetPricesCall__Inputs {
    return new SetPricesCall__Inputs(this);
  }

  get outputs(): SetPricesCall__Outputs {
    return new SetPricesCall__Outputs(this);
  }
}

export class SetPricesCall__Inputs {
  _call: SetPricesCall;

  constructor(call: SetPricesCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetPricesCall__Outputs {
  _call: SetPricesCall;

  constructor(call: SetPricesCall) {
    this._call = call;
  }
}

export class SetTokensCall extends ethereum.Call {
  get inputs(): SetTokensCall__Inputs {
    return new SetTokensCall__Inputs(this);
  }

  get outputs(): SetTokensCall__Outputs {
    return new SetTokensCall__Outputs(this);
  }
}

export class SetTokensCall__Inputs {
  _call: SetTokensCall;

  constructor(call: SetTokensCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetTokensCall__Outputs {
  _call: SetTokensCall;

  constructor(call: SetTokensCall) {
    this._call = call;
  }
}

export class SetVolBasisPointsCall extends ethereum.Call {
  get inputs(): SetVolBasisPointsCall__Inputs {
    return new SetVolBasisPointsCall__Inputs(this);
  }

  get outputs(): SetVolBasisPointsCall__Outputs {
    return new SetVolBasisPointsCall__Outputs(this);
  }
}

export class SetVolBasisPointsCall__Inputs {
  _call: SetVolBasisPointsCall;

  constructor(call: SetVolBasisPointsCall) {
    this._call = call;
  }

  get _volBasisPoints(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetVolBasisPointsCall__Outputs {
  _call: SetVolBasisPointsCall;

  constructor(call: SetVolBasisPointsCall) {
    this._call = call;
  }
}
