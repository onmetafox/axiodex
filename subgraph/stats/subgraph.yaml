specVersion: 0.0.2
description: AXN
schema:
  file: ./schema.graphql


dataSources:
  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: base
    source:
      address: "0xCCADC697c55bbB68dc5bCdf8d3CBe83CdD4E071E"
      abi: ChainlinkAggregator
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: base
    source:
      address: "0x71041dddad3595F9CEd3DcCFBe3D1F4b0a16Bb70"
      abi: ChainlinkAggregator
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorUSDC
    network: base
    source:
      address: "0x7e860098F58bBFC8648a4311b374B1D669a2bc6B"
      abi: ChainlinkAggregator
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedUSDC
      file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: PriceFeedHEX
    network: base
    source:
      address: "0x94F3C1F777B5410964E94f79d7B95E4A142FF0E8"
      abi: PriceFeed
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: PriceFeed
          file: ./abis/PriceFeed.json
      eventHandlers:
        - event: UpdateAnswer(address,uint80,int256)
          handler: handleAnswerUpdatedHEX
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: AlpManager
    network: base
    source:
      address: "0xe0f5ABCdD0085a39D40E40D473896a134C2221Ee"
      abi: AlpManager
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - HourlyAlpStat
      abis:
        - name: AlpManager
          file: ./abis/AlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: OrderBook
    network: base
    source:
      address: "0x5D524F714b34E967D3c3B154443318244D6b8748"
      abi: OrderBook
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: OrderBook
          file: ./abis/OrderBook.json
      eventHandlers:
        - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateIncreaseOrder
        - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelIncreaseOrder
        - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteIncreaseOrder

        - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateDecreaseOrder
        - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelDecreaseOrder
        - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteDecreaseOrder

        - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCreateSwapOrder
        - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCancelSwapOrder
        - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
          handler: handleExecuteSwapOrder
      file: ./src/ordersMapping.ts

  - kind: ethereum/contract
    name: FastPriceFeed
    network: base
    source:
      address: "0x8141E4Ff72cE45036d0E3eaD64732912ACbEC328"
      abi: FastPriceFeed
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceFeed
          file: ./abis/FastPriceFeed.json
      eventHandlers:
        - event: SetPrice(address,uint256)
          handler: handleSetPrice
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FastPriceEvents
    network: base
    source:
      address: "0xE207F1E760B11088Ad0df3BA840278525c897fBC"
      abi: FastPriceEvents
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handlePriceUpdate
      file: ./src/pricesMapping.ts

  # - kind: ethereum/contract
  #   name: UniswapV2pair
  #   network: base
  #   source:
  #     address: "0x2A6538a456650Cd454Dcd8f0B4665183DBa0bb27"
  #     abi: UniswapV2pair
  #     startBlock: 9572396
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - UniswapPrice
  #     abis:
  #       - name: UniswapV2Pair
  #         file: ./abis/UniswapV2Pair.json
  #     eventHandlers:
  #       # - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
  #       - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
  #         handler: handleUniswapAxnEthSwap
  #     file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FeeAxnDistributor
    network: base
    source:
      address: "0x5597162ef3C372C79b6cEB8E172a5D828Ff7E68c"
      abi: RewardDistributor
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - AxnStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToAxn
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: StakedAxnDistributor
    network: base
    source:
      address: "0x9d545C1DA4F446910d1a7B14aE600042284d5AA6"
      abi: RewardDistributor
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - AxnStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEsaxnToAxn
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: FeeAlpDistributor
    network: base
    source:
      address: "0xe392786CbEec3d23f280928b1536BB83C773bA7a"
      abi: RewardDistributor
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - AxnStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToAlp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: StakedAlpDistributor
    network: base
    source:
      address: "0x8553155e04cb6Fe9777E7362817df50a3BDA24D8"
      abi: RewardDistributor
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - AxnStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEsaxnToAlp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: Vault2
    network: base
    source:
      address: "0x318489fbF2b3a70d4ba7346E11f58A6C2D9FaBA1"
      abi: Vault
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TradingStat
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
      file: ./src/tradingMapping.ts

  - kind: ethereum/contract
    name: Vault
    network: base
    source:
      address: "0x318489fbF2b3a70d4ba7346E11f58A6C2D9FaBA1"
      abi: Vault
      startBlock: 9572396
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Swap
        - IncreasePosition
        - DecreasePosition
        - HourlyVolume
        - HourlyVolumeBySource
        - HourlyVolumeByToken
        - HourlyFee
        - Transaction
        - FundingFee
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      # callHandlers: # doesn't work on Arbitrum
      #   - function: setTokenConfig(address,uint256,uint256,uint256,uint256,bool,bool)
      #     handler: handleSetTokenConfig
      eventHandlers:
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: CollectMarginFees(address,uint256,uint256)
          handler: handleCollectMarginFees
        - event: BuyUSDG(address,address,uint256,uint256,uint256)
          handler: handleBuyUSDG
        - event: SellUSDG(address,address,uint256,uint256,uint256)
          handler: handleSellUSDG
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256,uint256)
          handler: handleUpdatePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: IncreasePoolAmount(address,uint256)
          handler: handleIncreasePoolAmount
        - event: DecreasePoolAmount(address,uint256)
          handler: handleDecreasePoolAmount
        - event: IncreaseReservedAmount(address,uint256)
          handler: handleIncreaseReservedAmount
        - event: DecreaseReservedAmount(address,uint256)
          handler: handleDecreaseReservedAmount
        - event: IncreaseUsdgAmount(address,uint256)
          handler: handleIncreaseUsdgAmount
        - event: DecreaseUsdgAmount(address,uint256)
          handler: handleDecreaseUsdgAmount
      file: ./src/mapping.ts
